----------------------------------------------------------------------------------------------------
# Infer return type from argument

+ foo(a) {
    = a
}

do {
    -- foo(1)
    -- foo(1.5)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
1.500000

----------------------------------------------------------------------------------------------------
# Infer return type from type arguments

+ foo\T(t:Thing\T) {
    = t.a
}

+ bar() {
    = Thing\Double()
}

+ Thing\T {
    + a:T = 0
}

do {
    thing = bar()
    -- foo(thing)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0.000000

----------------------------------------------------------------------------------------------------

+ foo(x) {
    if (x > 1) {
        = 1
    } else {
        = 2
    }
}

do {
    -- foo(2)
    -- foo(0)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2

----------------------------------------------------------------------------------------------------

+ foo(x) {
    if (x > 1) {
        = 1
    }
}

do {
    -- foo(2)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Return required
<no file>, line 1
    + foo(x) {
    ^

----------------------------------------------------------------------------------------------------

+ foo(x) {
    if (x > 1) {
        = 1
    } else {
        = 2.5
    }
}

do {
    -- foo(2)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Return types don't match
<no file>, line 5
            = 2.5
            ^
----------------------------------------------------------------------------------------------------
# Convert return types to type that preserves data

+ foo(x) {
    if (x > 1) {
        = 1
    } else {
        = 2.5
    }
}

do {
    -- foo(2)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
%nyi

1.000000

----------------------------------------------------------------------------------------------------
# Convert return types to type that preserves data

+ foo(x) {
    while (x > 1) {
        = 1
    }
    = 2
}

do {
    -- foo(2)
    -- foo(0)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2

----------------------------------------------------------------------------------------------------
# Convert return types to type that preserves data

+ foo(x) {
    while (x > 1) {
        = 1
    }
}

do {
    -- foo(2)
    -- foo(0)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Return required
<no file>, line 1
    + foo(x) {
    ^

----------------------------------------------------------------------------------------------------
