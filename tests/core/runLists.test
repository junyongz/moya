----------------------------------------------------------------------------------------------------

do {
    list = List\Int32()
    -- list.length
    
    list.add(10)
    -- list.length
    -- list[0]

    list.add(12)
    -- list.length
    -- list[1]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
1
10
2
12

----------------------------------------------------------------------------------------------------

do {
    list = [1,2,3]
    try {
        -- list[3]
    } catch (exc) {
        -- "Caught '%exc.message'"
    }
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Caught 'List index 3 out of range'

----------------------------------------------------------------------------------------------------

do {
    list = List\Int32()
    -- list.length
    
    list.add(10)
    -- list.length
    -- list[0]

    list.add(12)
    -- list.length
    -- list[1]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
1
10
2
12

----------------------------------------------------------------------------------------------------

do {
    list = List\Double()
    -- list.length
    
    list.add(10.5)
    -- list.length
    -- list[0]

    list.add(12.5)
    -- list.length
    -- list[1]

    list[1] = 15.5
    -- list[1]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
1
10.500000
2
12.500000
15.500000

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 0
    
    + This(v) do {
        a = v
    }
}

do {
    thing = Thing(10)
    list = List\Thing()
    -- list.length
    list.add(thing)
    -- list.length
    -- list[0].a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
1
10

----------------------------------------------------------------------------------------------------

do {
    list = List\Double()
    list[31] = 2.5
    -- list.length
    -- list[30]
    -- list[31]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

32
0.000000
2.500000

----------------------------------------------------------------------------------------------------

do {
    list = [1,2,3]
    -- list[0]
    -- list[1]
    -- list[2]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2
3

----------------------------------------------------------------------------------------------------

do {
    list = [true, false, true]
    -- list[0]
    -- list[1]
    -- list[2]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

true
false
true

----------------------------------------------------------------------------------------------------

do {
    ` One float in the list makes the whole list floats
    list = [1,2.5,3]
    -- list[0]
    -- list[1]
    -- list[2]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1.000000
2.500000
3.000000

----------------------------------------------------------------------------------------------------

+ Base {
    + a() -> 0
}

+ Sub1: Base {
    + a() -> 1
}

+ Sub2: Base {
    + a() -> 2
}

do {
    list = [Sub1(), Sub2(), Base()]
    -- list[0]
    -- list[0].a()
    -- list[1]
    -- list[1].a()
    -- list[2]
    -- list[2].a()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__source__:Base
1
__source__:Base
2
__source__:Base
0

----------------------------------------------------------------------------------------------------

+ Base1 {
    + a() -> 0
}

+ Base2: Base1 {
    + a() -> 1
}

+ Sub1: Base2 {
    + a() -> 2
}

+ Sub2: Base2 {
    + a() -> 3
}

do {
    list = [Sub1(), Sub2()]
    -- list[0]
    -- list[0].a()
    -- list[1]
    -- list[1].a()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__source__:Base2
2
__source__:Base2
3

----------------------------------------------------------------------------------------------------

+ Base1 {
    + a() -> 0
}

+ Base2: Base1 {
    + a() -> 1
}

+ Sub1: Base2 {
    + a() -> 2
}

+ Sub2: Base2 {
    + a() -> 3
}

do {
    list = [Sub1(), Sub2(), Base1()]
    -- list[0]
    -- list[0].a()
    -- list[1]
    -- list[1].a()
    -- list[2]
    -- list[2].a()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__source__:Base1
2
__source__:Base1
3
__source__:Base1
0

----------------------------------------------------------------------------------------------------

do {
    list = [1,2]
    -- !list
    list = List\Int32()
    -- !list
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

false
true

----------------------------------------------------------------------------------------------------
