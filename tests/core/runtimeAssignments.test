----------------------------------------------------------------------------------------------------
# Single assignment

a = 1
-- a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1

----------------------------------------------------------------------------------------------------
# Separate assignments

a = 1
-- a
b = 2
-- b
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2

----------------------------------------------------------------------------------------------------
# Function definition

foo()
    _

-- foo

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Function foo>

----------------------------------------------------------------------------------------------------
# Variables in closure can be modified

x = 1

a()
    x = 2

-- x
a()
-- x

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2

----------------------------------------------------------------------------------------------------
# Variables in closure of nested function call can be modified

x = 1

a()
    b()

b()
    x = 2

-- x
a()
-- x

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
2

----------------------------------------------------------------------------------------------------
# Chained assignment

a = b = 42
-- a
-- b

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

42
42

----------------------------------------------------------------------------------------------------
# Assignment returns right-side value to containing expression

-- a = 1
-- a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
1

----------------------------------------------------------------------------------------------------
# Property assignments

a()
    _

a.b = 42
-- a.b
a.b = 43
-- a.b

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

42
43

----------------------------------------------------------------------------------------------------
# Undefined property access

a()
    _

-- a.b

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

undefined

----------------------------------------------------------------------------------------------------
# Property assignment returns right-side value to containing expression

f = 1

-- f.a = 1
-- f.a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
1

----------------------------------------------------------------------------------------------------
# Chained property assignment

f = 1

f.a = f.b = 42
-- f.a
-- f.b

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

42
42

----------------------------------------------------------------------------------------------------

this = 42

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: 'this' can't be modified
<no file>, line 1

====================================================================================================

====================================================================================================
----------------------------------------------------------------------------------------------------
# Delete local variable

a = 1
-- a
-= a
-- a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1
undefined

----------------------------------------------------------------------------------------------------
# Delete operator returns undefined

a = 1
-- -= a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

undefined

----------------------------------------------------------------------------------------------------
# Illegal deletion of undefined variable

-= a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: 'a' is not defined
<no file>, line 1

----------------------------------------------------------------------------------------------------
# Illegal deletion of "this"

-= this

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: 'this' can't be modified
<no file>, line 1

----------------------------------------------------------------------------------------------------

-= 42

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Illegal delete
<no file>, line 1

----------------------------------------------------------------------------------------------------
# Delete imperatively-assigned property

Foo is class
    _

foo = Foo()
foo.a = 42
-- foo.a
-= foo.a
-- foo.a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

42
undefined

----------------------------------------------------------------------------------------------------
# Delete declaratively-assigned property

Foo is class
    a = 42

foo = Foo()
-- foo.a
foo.a = 99
-- foo.a
-= foo.a
-- foo.a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

42
99
42

----------------------------------------------------------------------------------------------------
# Delete declaratively-assigned invalidates cached value

doIt()
    -- "do it"
    = 42

Foo is class
    a = doIt()

foo = Foo()
-- foo.a
-= foo.a
-- foo.a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

do it
42
do it
42

----------------------------------------------------------------------------------------------------
# Assignments in inner scopes affects the outer scope

a = 42
if true
    a = 43
-- a

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

43

----------------------------------------------------------------------------------------------------
