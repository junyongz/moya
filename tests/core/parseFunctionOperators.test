====================================================================================================
# Operator Functions

Functions can be declared for various operators.
====================================================================================================
====================================================================================================
Prefix operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ (!this) {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <UnaryExpression op="!">
        <Id name="this"/>
    </UnaryExpression>
    <Id name="null"/>
</Declaration>

----------------------------------------------------------------------------------------------------

+ (!this):T {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <Subtype>
        <UnaryExpression op="!">
            <Id name="this"/>
        </UnaryExpression>
        <TypeId name="T"/>
    </Subtype>
    <Id name="null"/>
</Declaration>

====================================================================================================
Infix operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ (this + that) {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <BinaryExpression op="+">
        <Id name="this"/>
        <Id name="that"/>
    </BinaryExpression>
    <Id name="null"/>
</Declaration>

----------------------------------------------------------------------------------------------------

+ (this + that:T) {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <BinaryExpression op="+">
        <Id name="this"/>
        <Subtype>
            <Id name="that"/>
            <TypeId name="T"/>
        </Subtype>
    </BinaryExpression>
    <Id name="null"/>
</Declaration>

----------------------------------------------------------------------------------------------------

+ (this + that):T
    _

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <Subtype>
        <BinaryExpression op="+">
            <Id name="this"/>
            <Id name="that"/>
        </BinaryExpression>
        <TypeId name="T"/>
    </Subtype>
    <Id name="null"/>
</Declaration>

----------------------------------------------------------------------------------------------------

+ (this + that:T):T
    _

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <Subtype>
        <BinaryExpression op="+">
            <Id name="this"/>
            <Subtype>
                <Id name="that"/>
                <TypeId name="T"/>
            </Subtype>
        </BinaryExpression>
        <TypeId name="T"/>
    </Subtype>
    <Id name="null"/>
</Declaration>

====================================================================================================
Setters.
====================================================================================================
----------------------------------------------------------------------------------------------------
# Setter

+ (bar = value) {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <AssignmentExpression op="=">
        <Id name="bar"/>
        <Id name="value"/>
    </AssignmentExpression>
    <Id name="null"/>
</Declaration>

----------------------------------------------------------------------------------------------------

+ (bar = value) => {
    _
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <AssignmentExpression op="=">
        <Id name="bar"/>
        <Function expression="true">
            <head>
                <Id name="value"/>
            </head>
            <Id name="null"/>
        </Function>
    </AssignmentExpression>
</Declaration>

----------------------------------------------------------------------------------------------------
