====================================================================================================
Binary operators
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + (this + n:Int32):Int32 {
        = a + n
    }

    + (this + n:Thing):Double {
        = a + n.a
    }
}

+ main() {
    thing = Thing()
    -- thing + 1
    -- thing + thing
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

11
20.000000

====================================================================================================
Incremental assignment operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + (this += n) {
        a += n
    }
}

+ main() {
    thing = Thing()
    thing += 1
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

11

----------------------------------------------------------------------------------------------------
# Incremental operator on a property of a member

+ Member {
    + a = 10
    
    + (this += n) {
        a += n
    }
}

+ Thing {
    + member = Member()
}

+ main() {
    thing = Thing()
    thing.member += 1
    -- thing.member.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

11

====================================================================================================
Concat operator
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + a = "me"
    
    + (this ++ other) {
        = "%a with%other"
    }
}

+ main() {
    thing = Thing()
    -- "%thing you"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

me with you

====================================================================================================
Comparison operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + This(v) {
        a = v
    }
    
    + (this == other) {
        = a == other.a
    }
}

+ main() {
    a = Thing(10)
    b = Thing(20)
    -- a == b
    -- a == a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
-1

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + This(v) {
        a = v
    }
    
    + (this != other) {
        = a != other.a
    }
}

+ main() {
    a = Thing(10)
    b = Thing(10)
    -- a == b
    -- a != b
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
0

----------------------------------------------------------------------------------------------------
# != deduced from ==

+ Thing {
    + a = 10
    
    + This(v) {
        a = v
    }
    
    + (this == other) {
        = a == other.a
    }
}

+ main() {
    a = Thing(10)
    b = Thing(10)
    -- a == b
    -- a != b
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-1
0

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + This(v) {
        a = v
    }
    
    + (this > other) {
        = a > other.a
    }
}

+ main() {
    a = Thing(10)
    b = Thing(15)
    -- a > b
    -- b > a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0
-1

----------------------------------------------------------------------------------------------------

+ Thing {
    + (this > other) {
        = "hi"
    }
}

+ main() {
    a = Thing()
    -- a > a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Function returned non-boolean type
<no file>, line 9
        -- a > a
             ^

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 0
    
    + (this is in other) {
        = this == other
    }

    + (this not in other) {
        = this != other
    }
}

+ main() {
    a = Thing()
    b = Thing()
    -- a is in a
    -- a is in b

    -- a not in a
    -- a not in b
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-1
0
0
-1

----------------------------------------------------------------------------------------------------
# "not in" deduced from "is in" operator

+ Thing {
    + a = 10
    
    + This(v) {
        a = v
    }
    
    + (this is in other) {
        = a == other.a
    }
}

+ main() {
    a = Thing(10)
    b = Thing(10)
    -- a is in b
    -- a not in b
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-1
0

----------------------------------------------------------------------------------------------------
# Error if both "is in" and "not in" not supported and you call one

+ Thing {
    + This() {
    }
}

+ main() {
    a = Thing()
    b = Thing()
    -- a not in b
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Operator not supported
<no file>, line 9
        -- a not in b
             ^^^^^^

====================================================================================================
Prefix operators.
====================================================================================================
----------------------------------------------------------------------------------------------------
# Incremental operator on a property of a member

+ Thing {
    + (!this) {
        = true
    }
}

+ main() {
    thing = Thing()
    -- !thing
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-1

----------------------------------------------------------------------------------------------------

+ Thing {
    + (!this) {
        = 2
    }
}

+ main() {
    thing = Thing()
    -- !thing
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Operator must return Bool
<no file>, line 9
        -- !thing
           ^

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 5
    
    + (-this) {
        neg = Thing()
        neg.a = -a
        = neg
    }
}

+ main() {
    thing = Thing()
    nthing = -thing
    -- nthing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-5

----------------------------------------------------------------------------------------------------

+ Thing {
    + (in this) {
        = 5
    }
}

+ main() {
    thing = Thing()
    -- in thing
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

5

====================================================================================================
Index operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + ([index]) {
        = index + 5
    }
}

+ main() {
    thing = Thing()
    -- thing[10]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

15

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + ([index] = value) {
        a = index + value
    }
}

+ main() {
    thing = Thing()
    thing[10] = 5
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

15

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + (-= [index]) {
        a -= index
    }
}

+ main() {
    thing = Thing()
    -= thing[1]
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

9

====================================================================================================
Index operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + ([g to h by i]) {
        = g + h + i
    }
}

+ main() {
    thing = Thing()
    -- thing[10 to 100 by 1]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

111

----------------------------------------------------------------------------------------------------

+ Thing {
    + ([g to h by i=1]) {
        = g + h + i
    }
}

+ main() {
    thing = Thing()
    -- thing[10 to 100]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

111

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + ([g to h by i] = value) {
        a = g + h + i + value
    }
}

+ main() {
    thing = Thing()
    thing[10 to 100 by 1] = 5
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

116

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + ([g to h by i=1] = value) {
        a = g + h + i + value
    }
}

+ main() {
    thing = Thing()
    thing[10 to 100] = 5
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

116

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = 10
    
    + (-= [g to h by i]) {
        a -= g + h + i
    }
}

+ main() {
    thing = Thing()
    -= thing[10 to 100 by 1]
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-101

====================================================================================================
Lookup operators.
====================================================================================================
----------------------------------------------------------------------------------------------------

+ Thing {
    + (.[key]) {
        = "found %key"
    }
}

+ main() {
    thing = Thing()
    -- thing.["foo"]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

found foo

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = "nada"
    
    + (.[key] = value) {
        a = "got %key = %value"
    }
}

+ main() {
    thing = Thing()
    thing.["foo"] = "bar"
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

got foo = bar

----------------------------------------------------------------------------------------------------

+ Thing {
    + a = "nada"
    
    + (-= .[key]) {
        a = "removed %key"
    }
}

+ main() {
    thing = Thing()
    -= thing.["foo"]
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

removed foo

----------------------------------------------------------------------------------------------------
