====================================================================================================
# Assignments

Basic assignments
====================================================================================================
----------------------------------------------------------------------------------------------------

a = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

a.b = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <PropertyExpression name="b">
        <Id name="a"/>
    </PropertyExpression>
    <Integer value="1"/>
</AssignmentExpression>

====================================================================================================
Incremental assignments.
====================================================================================================
----------------------------------------------------------------------------------------------------

a += 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="+=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

a -= 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="-=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------
# Incremental multiplication

a *= 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="*=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

a /= 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="/=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

a //= 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="//=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

a **= 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Id name="a"/>
    <BinaryExpression op="**=">
        <Id name="a"/>
        <Integer value="1"/>
    </BinaryExpression>
</AssignmentExpression>

====================================================================================================
Unlike regular assignments, incremental assignments apply to any expression.
====================================================================================================
----------------------------------------------------------------------------------------------------

a() += 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<BinaryExpression op="+=">
    <CallExpression>
        <Id name="a"/>
    </CallExpression>
    <Integer value="1"/>
</BinaryExpression>

====================================================================================================
Key assignments.
====================================================================================================
----------------------------------------------------------------------------------------------------

foo[bar] = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <BinaryExpression op="[]">
        <Id name="foo"/>
        <Id name="bar"/>
    </BinaryExpression>
    <Integer value="1"/>
</AssignmentExpression>

====================================================================================================
Range assignments.
====================================================================================================
----------------------------------------------------------------------------------------------------

foo[bar to baz] = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <BinaryExpression op="[to]">
        <Id name="foo"/>
        <Range>
            <Id name="bar"/>
            <Id name="baz"/>
            <Undefined/>
        </Range>
    </BinaryExpression>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo[bar to baz by bags] = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <BinaryExpression op="[to]">
        <Id name="foo"/>
        <Range>
            <Id name="bar"/>
            <Id name="baz"/>
            <Id name="bags"/>
        </Range>
    </BinaryExpression>
    <Integer value="1"/>
</AssignmentExpression>

====================================================================================================
Type declarations in assignments
====================================================================================================
----------------------------------------------------------------------------------------------------

foo: Bar = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <TypeId name="Bar"/>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo: Bar\T = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <Type>
            <TypeId name="Bar"/>
            <TypeId name="T"/>
        </Type>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo: Bar\(T:S\G) = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <Type>
            <TypeId name="Bar"/>
            <Subtype>
                <TypeId name="T"/>
                <Type>
                    <TypeId name="S"/>
                    <TypeId name="G"/>
                </Type>
            </Subtype>
        </Type>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo: Bar\(T:S\(G:B)) = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <Type>
            <TypeId name="Bar"/>
            <Subtype>
                <TypeId name="T"/>
                <Type>
                    <TypeId name="S"/>
                    <Subtype>
                        <TypeId name="G"/>
                        <TypeId name="B"/>
                    </Subtype>
                </Type>
            </Subtype>
        </Type>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo: Bar\(T:String) = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <Type>
            <TypeId name="Bar"/>
            <Subtype>
                <TypeId name="T"/>
                <TypeId name="String"/>
            </Subtype>
        </Type>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

----------------------------------------------------------------------------------------------------

foo: [Foo] = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<AssignmentExpression op="=">
    <Subtype>
        <Id name="foo"/>
        <List>
            <TypeId name="Foo"/>
        </List>
    </Subtype>
    <Integer value="1"/>
</AssignmentExpression>

====================================================================================================
Assignments can be made public or private (valid only in declarative contexts).
====================================================================================================
----------------------------------------------------------------------------------------------------

+ a = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="public">
    <AssignmentExpression op="=">
        <Id name="a"/>
        <Integer value="1"/>
    </AssignmentExpression>
</Declaration>

----------------------------------------------------------------------------------------------------

- a = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

<Declaration access="private">
    <AssignmentExpression op="=">
        <Id name="a"/>
        <Integer value="1"/>
    </AssignmentExpression>
</Declaration>

====================================================================================================
Illegal assignments.
====================================================================================================
----------------------------------------------------------------------------------------------------

a() = 1

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Exception: Illegal assignment
<no file>, line 1

----------------------------------------------------------------------------------------------------
