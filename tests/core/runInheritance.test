----------------------------------------------------------------------------------------------------

+ Foo {
    + a = 0
}

+ Bar: Foo {
}

do {
    bar = Bar()
    thing:Foo = bar
    -- thing.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

0

----------------------------------------------------------------------------------------------------

+ Foo {
    + a = 42
}

+ Bar: Foo {
    + b = 99
}

do {
    bar = Bar()
    -- bar.b
    -- bar.a
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

99
42

----------------------------------------------------------------------------------------------------

+ Foo {
    + a = 42
}

+ Bar: Foo {
    + b = 99
    
    + bar() {
        -- b
        -- a
    }
}

do {
    bar = Bar()
    bar.bar()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

99
42

----------------------------------------------------------------------------------------------------

+ Foo {
    + a = 42
    
    + foo() {
        -- "Foo.a = %a"
    }
}

+ Bar: Foo {
    + b = 99
    
    + bar() {
        -- "Bar.b = %b"
        -- "Bar.a = %a"
    }
}

do {
    bar = Bar()
    bar.bar()
    bar.foo()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Bar.b = 99
Bar.a = 42
Foo.a = 42

----------------------------------------------------------------------------------------------------

+ Foo {
    + a = 42
    
    + foo() {
        -- "Foo.a = %a"
    }
}

+ Bar: Foo {
    + b = 99
    
    + bar() {
        -- "Bar.b = %b"
        -- "Bar.a = %a"
    }
}

+ act(thing:Foo) {
    thing.foo()
}

do {
    bar = Bar()
    act(bar)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Foo.a = 42

----------------------------------------------------------------------------------------------------

+ Foo {
    + f1() {
        -- "Foo 1"
    }
}

+ Bar: Foo {
    + f1() {
        -- "Bar 1"
    }
}

+ act(foo:Foo){
    foo.f1()
}

do {
    bar = Bar()
    bar.f1()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Bar 1

----------------------------------------------------------------------------------------------------

+ Foo {
    + f1() {
        -- "Foo 1"
    }
}

+ Bar: Foo {
    + f1() {
        -- "Bar 1"
    }
}

do {
    bar = Bar()
    
    `Downcast still calls method on subclass
    foo:Foo = bar
    foo.f1()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Bar 1

----------------------------------------------------------------------------------------------------

+ Foo {
    + f1() {
        -- "Foo 1"
    }

    + f2() {
        -- "Foo 2"
    }
}

+ Bar: Foo {
    + f1() {
        -- "Bar 1"
    }
}

do {
    bar = Bar()
    
    `Downcast still calls method on subclass
    foo:Foo = bar
    foo.f2()
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Foo 2

----------------------------------------------------------------------------------------------------

+ Foo {
    + f1() {
        -- "Foo 1"
    }
}

+ Bar: Foo {
    + f1() {
        -- "Bar 1"
    }
}

+ act(foo:Foo){
    foo.f1()
}

do {
    bar = Bar()
    
    `Downcast in argument still calls method on subclass
    foo:Foo = bar
    act(foo)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Bar 1

----------------------------------------------------------------------------------------------------

+ Foo {
    + f1\T(a:T) {
        -- "Foo 1 %a"
    }
}

+ Bar: Foo {
    + f1\T(a:T) {
        -- "Bar 1 %a"
    }
}

do {
    bar = Bar()
    
    `Downcast still calls method on subclass
    foo:Foo = bar
    foo.f1(5.5)
    foo.f1(3)
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Bar 1 5.500000
Bar 1 3

----------------------------------------------------------------------------------------------------
