
+ π = 3.14159265358979323846264338327
+ pi = π
+ epsilon = 2.7182818284590451

====================================================================================================

- absi32 = C"int abs(int)"
- absi64 = C"long long int llabs(long long int)"
- absf32 = C"float fabsf(float)"
- absf64 = C"double fabs(double)"

+ abs(n: Int32) -> absi32(n)
+ abs(n: Int64) -> absi64(n)
+ abs(n: Float32) -> absf32(n)
+ abs(n: Float64) -> absf64(n)

- roundf32 = C"float roundf(float)"
- roundf64 = C"double round(double)"

+ round(n: Float32) -> roundf32(n)
+ round(n: Float64) -> roundf64(n)

- floorf32 = C"float floorf(float)"
- floorf64 = C"double floor(double)"

+ floor(n: Float32) -> floorf32(n)
+ floor(n: Float64) -> floorf64(n)

- ceilf32 = C"float ceilf(float)"
- ceilf64 = C"double ceil(double)"

+ ceil(n: Float32) -> ceilf32(n)
+ ceil(n: Float64) -> ceilf64(n)

====================================================================================================

+ log = C"double log(double)"
+ sqrt = C"double sqrt(double)"
+ fmod = C"double fmod(double, double)"
- modf64 = C"double modf(double, double*)"

+ modf(n: Float64) -> (mod[0], rem) where {
    rem = modf64(n, mod)
    mod = Float64[1]
}

====================================================================================================

- sinf64 = C"double sin(double)"
- cosf64 = C"double cos(double)"
- tanf64 = C"double tan(double)"
- acosf64 = C"double acos(double)"
- asinf64 = C"double asin(double)"
- atanf64 = C"double atan(double)"
- atan2f64 = C"double atan2(double, double)"

+ Radians: rad: Float64
`+ Degrees: deg: ˚: 0.0174532925rad

+ sin(n: Radians): Float64 -> sinf64(n)
+ cos(n: Radians): Float64 -> cosf64(n)
+ tan(n: Radians): Float64 -> tanf64(n)

+ acos(n: Float64): Radians -> acosf64(n)
+ asin(n: Float64): Radians -> asinf64(n)
+ atan(n: Float64): Radians -> atanf64(n)
+ atan2(y: Float64, x: Float64): Radians -> atan2f64(y, x)

====================================================================================================

C"int rand()"
C"void srand(int)"
C"time_t time(time_t*)"

+ random() do {
    buf = Int32[1]
    srand(time(buf))
    = rand()
}

====================================================================================================

+ min(n1, n2) -> if n2 < n1 -> n2 else -> n1
+ max(n1, n2) -> if n2 > n1 -> n2 else -> n1

+ even(n) -> n // 2 == 0
+ odd(n) -> n // 2 != 0

====================================================================================================

+ num(numerator: Float64, denominator: Float64) -> numerator/denominator
+ denom(denominator: Float64, numerator: Float64) -> numerator/denominator
